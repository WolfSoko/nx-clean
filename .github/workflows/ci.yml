name: CI

on:
  push:
    branches:
      - main
      - renovate-github/**
  pull_request:

jobs:
  node-version:
    runs-on: ubuntu-latest
    outputs:
      node-version: ${{ steps.nvmrc.outputs.node-version }}
    steps:
      - uses: actions/checkout@v4
      # Read node version from `.nvmrc` file
      - id: nvmrc
        run: |
          echo "node-version=$(cat .nvmrc)"
          echo "node-version=$(cat .nvmrc)" >> $GITHUB_OUTPUT

  main:
    needs: node-version
    name: Nx Cloud - Main Job
    uses: nrwl/ci/.github/workflows/nx-cloud-main.yml@v0.14
    with:
      number-of-agents: 3
      node-version: ${{needs.node-version.outputs.node-version}}
      init-commands: |
        npx nx-cloud start-ci-run --stop-agents-after="build" --agent-count=3
      parallel-commands: |
        npx nx-cloud record -- npx nx format:check
      parallel-commands-on-agents: |
        npx nx affected --target=build
        npx nx affected --target=lint
        npx nx ${{ github.event_name == 'pull_request' && 'affected' || 'run-many --all' }} --target=test --ci
        npx nx ${{ github.event_name == 'pull_request' && 'affected' || 'run-many --all' }} --target=e2e --parallel=1 --ci
      artifacts-path: ./coverage

  codecov:
    name: Coverage Report
    needs: main
    if: success() && github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: 'Downloading artifacts'
        uses: actions/download-artifact@v3
        with:
          name: nx-main-artifacts
          path: ./coverage
      - name: 'Codecov'
        uses: 'codecov/codecov-action@v3.1.6'
        if: hashFiles('coverage/**/*') != ''
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          verbose: true

  agents:
    needs: node-version
    name: Nx Cloud - Agents
    uses: nrwl/ci/.github/workflows/nx-cloud-agents.yml@v0.14
    with:
      number-of-agents: 3
      node-version: ${{needs.node-version.outputs.node-version}}
